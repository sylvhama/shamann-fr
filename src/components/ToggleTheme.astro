---
const leftLabel = "Activer mode jour";
const rightLabel = "Activer mode sombre";
const name = "dark-mode";
const leftValue = "light";
const rightValue = "dark";

const colors = {
  black: "#1d1e26",
  white: "#f8f8f2",
};

declare global {
  interface Window {
    THEME_COLORS: Record<string, string>;
  }
}
---

<script is:inline define:vars={{ colors }}>
  let themeColor;
  if (
    localStorage.theme === "dark" ||
    (!("theme" in localStorage) &&
      window.matchMedia("(prefers-color-scheme: dark)").matches)
  ) {
    themeColor = colors.black;
    document.documentElement.classList.add("dark");
  } else {
    themeColor = colors.white;
    document.documentElement.classList.remove("dark");
  }
  if (themeColor) {
    const themeColorTag = document.createElement("meta");
    themeColorTag.name = "theme-color";
    themeColorTag.content = themeColor;
    document.head.appendChild(themeColorTag);
    window.THEME_COLORS = colors;
  }
</script>

<script>
  function check(selector: string) {
    const input = document.querySelector<HTMLInputElement>(selector);
    if (input) {
      input.checked = true;
    }
  }
  if (document.documentElement.classList.contains("dark")) {
    check('input[aria-label="Activer mode sombre"]');
  } else {
    check('input[aria-label="Activer mode jour"]');
  }

  const toggleTheme = document.getElementById("toggle-theme");
  if (toggleTheme) {
    toggleTheme.querySelectorAll("input").forEach((input) => {
      input.addEventListener("change", (event) => {
        document.body.classList.add("duration-300");
        const target = event.target as HTMLInputElement;
        const themeColorTag = document.querySelector<HTMLMetaElement>(
          'meta[name="theme-color"]'
        );
        if (target.value === "dark") {
          localStorage.theme = "dark";
          document.documentElement.classList.add("dark");
          if (themeColorTag) {
            themeColorTag.content = window.THEME_COLORS.black;
          }
        } else {
          localStorage.theme = "light";
          document.documentElement.classList.remove("dark");
          if (themeColorTag) {
            themeColorTag.content = window.THEME_COLORS.white;
          }
        }
      });
    });
  }
</script>

<div
  id="toggle-theme"
  class="flex items-center gap-2 rounded-2xl bg-gray-200 p-1 dark:bg-gray-600"
>
  <label
    class="cursor-pointer text-orange-500 ring-pink focus-within:ring dark:text-gray-400"
    title={leftLabel}
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="currentColor"
      aria-hidden="true"
    >
      <path
        fill-rule="evenodd"
        d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
        clip-rule="evenodd"></path>
    </svg>
    <input
      class="sr-only"
      type="radio"
      name={name}
      value={leftValue}
      aria-label={leftLabel}
    />
  </label>

  <label
    class="cursor-pointer text-gray-400 ring-pink focus-within:ring dark:text-yellow-400"
    title={rightLabel}
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="currentColor"
      aria-hidden="true"
    >
      <path
        d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
      ></path>
    </svg>
    <input
      class="sr-only"
      type="radio"
      name={name}
      value={rightValue}
      aria-label={rightLabel}
    />
  </label>
</div>
